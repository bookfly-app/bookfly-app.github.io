import"../chunks/Bzak7iHL.js";import"../chunks/69_IOA4Y.js";import{a6 as o,f as a,a as c,a7 as n}from"../chunks/DhKu0NfF.js";import{H as r}from"../chunks/cVKVN-_B.js";import{P as i}from"../chunks/DodhG0CE.js";var x=o(`<!> <h2 class="svelte-tzxsxn">API Usage</h2> <p class="svelte-tzxsxn">wallflower.land provides a RESTful JSON API for developers to access
		data from.</p> <h2 class="svelte-tzxsxn">Books by ISBN</h2> <p class="svelte-tzxsxn">The <code class="svelte-tzxsxn">/api/book/[isbn]</code> endpoint can be used to fetch information about a book
		by it's ISBN-13. The endpoint provides the following fields:</p> <ul class="svelte-tzxsxn"><li class="svelte-tzxsxn"><code class="svelte-tzxsxn">title: string</code> - The title of the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">description: string</code> - A description for the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">authors: string[]</code> - The title of the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">pageCount: number</code> - The number of pages in the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">isbn: string</code> - The ISBN-13 that was searched</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">cover: string</code> - A link to the cover of the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">backupCover: string</code> - A link to a secondary cover for the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">genres: string[]</code> - Genres or subjects of the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">publishers: string[]</code> - The publishers of the book</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">publishDate: string</code> - The date the book was published</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">characters: string[]</code> - Characters in the book</li></ul> <p class="svelte-tzxsxn">All of these fields are guaranteed to be present. Some arrays may be empty.</p> <h2 class="svelte-tzxsxn">Books by Searching</h2> <p class="svelte-tzxsxn">The <code class="svelte-tzxsxn">/api/search/book?term=&lt;TERM&gt;</code> endpoint can be used to fetch 
		book search results from a search term <code class="svelte-tzxsxn">TERM</code>. The endpoint provides the 
		following fields:</p> <ul class="svelte-tzxsxn"><li class="svelte-tzxsxn"><code class="svelte-tzxsxn">results: string[]</code> - An array of ISBN-13s of the book search results.
			More information about each book from the results can be fetched from <code class="svelte-tzxsxn">/api/book/[isbn]</code> (see above).</li></ul> <p class="svelte-tzxsxn">The results field is guaranteed to be present. If no results are found, it will be
		an empty array.</p> <p class="svelte-tzxsxn">The <code class="svelte-tzxsxn">/api/search/book</code> endpoint also takes the following search parameters:</p> <ul class="svelte-tzxsxn"><li class="svelte-tzxsxn"><code class="svelte-tzxsxn">term: string [required]</code> - The search term</li> <li class="svelte-tzxsxn"><code class="svelte-tzxsxn">limit: integer [optional]</code> - The maximum amount of search results 
			(<code class="svelte-tzxsxn">default = 10</code>).</li></ul>`,1);function f(s){i(s,{class:"about",children:(t,d)=>{var e=x(),l=a(e);r(l,{title:"API Usage"}),n(24),c(t,e)},$$slots:{default:!0}})}export{f as component};
